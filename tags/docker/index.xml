<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>docker on Veerendra&#39;s Blog</title>
    <link>https://veerendra2.github.io/tags/docker/</link>
    <description>Recent content in docker on Veerendra&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 24 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://veerendra2.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Portainer vs Yacht</title>
      <link>https://veerendra2.github.io/portainer-vs-yacht/</link>
      <pubDate>Sat, 24 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/portainer-vs-yacht/</guid>
      <description>Introduction I have been working on my home server setup on Raspberry Pi 4. I&amp;rsquo;d like to deploy all of my services/tools in docker containers, and for that, I need a nice and fancy container management tool I want to have on my home server.
I had checked multiple sources, and finally picked two; they are Portainer and Yacht. Portainer is a well-known container management tool and Yacht is fairly new.</description>
    </item>
    
    <item>
      <title>User Namespace Isolation in Docker</title>
      <link>https://veerendra2.github.io/docker-userns-remap/</link>
      <pubDate>Fri, 11 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/docker-userns-remap/</guid>
      <description>There is a cool feature in docker called userns-remap, discovered while doing my RaspberryPi home server project; 15#issuecomment-1296311979, I can just enable userns-remap and docker does all remapping of uid and gid inside docker container to a non-root user on the host.
https://docs.docker.com/engine/security/userns-remap/
How to enable *It is better to reinstall docker and remove all existing docker volumes
Add below /etc/docker/daemon.json { &amp;#34;userns-remap&amp;#34;: &amp;#34;default&amp;#34; } Restart the docker daemon $ sudo systemctl restart docker Ansible automation here In-Action # Run the Nginx container $ docker run -it -d nginx # Inside, the process thinks it is running as root!</description>
    </item>
    
    <item>
      <title>Pi-hole with DHCP Relay in Docker</title>
      <link>https://veerendra2.github.io/pihole-dhcp-relay/</link>
      <pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/pihole-dhcp-relay/</guid>
      <description>Introduction I have been working on a RaspberryPi home server project for quite some time. The project is a collection of applications to run on RaspberryPi and all applications are deployable with docker-compose files and ansible automation. One of the applications I was configuring is Pi-hole, a network-wide ad-blocker.
I decided to use Pi-hole as also DHCP server for my LAN. When I look into docs, it says it has to be run as network_mode: host, because it allows Pi-hole to listen to DHCP broadcast packets.</description>
    </item>
    
  </channel>
</rss>
