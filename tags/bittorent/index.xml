<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Bittorent on Veerendra&#39;s Blog</title>
    <link>https://veerendra2.github.io/tags/bittorent/</link>
    <description>Recent content in Bittorent on Veerendra&#39;s Blog</description>
    <generator>Hugo -- 0.139.3</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 Apr 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://veerendra2.github.io/tags/bittorent/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wireguard VPN and BitTorrent on Docker Swarm (Part 1)</title>
      <link>https://veerendra2.github.io/wireguard-qbittorrent-docker-swarm-1/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://veerendra2.github.io/wireguard-qbittorrent-docker-swarm-1/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;One of the services I always wanted to have on my &lt;a href=&#34;https://github.com/veerendra2/raspberrypi-homeserver&#34;&gt;raspberry pi home server&lt;/a&gt; is VPN and BitTorrent, which basically, route all BitTorrent traffic through a VPN container. Then I saw Wolfgang&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=SMF301vQqJo&#34;&gt;&amp;ldquo;Set Up Your Own Wireguard VPN Server with 2FA in 5 Minutes!&amp;rdquo;&lt;/a&gt; on Youtube, which inspired me to set up my own VPN server. I quickly created an instance on Oracle Cloud and ran the &lt;a href=&#34;https://github.com/notthebee/ansible-easy-vpn&#34;&gt;ansible playbook&lt;/a&gt; to deploy the wireguard VPN. After I tested a few months on Mobile and PC, I&amp;rsquo;m comfortable setting up server and client. So, I decided to use the Wireguard in my &lt;a href=&#34;https://github.com/veerendra2/raspberrypi-homeserver&#34;&gt;raspberrypi-homeserver&lt;/a&gt; project.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
