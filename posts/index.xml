<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Veerendra&#39;s Blog</title>
    <link>https://veerendra2.github.io/posts/</link>
    <description>Recent content in Posts on Veerendra&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 01 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://veerendra2.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Strimzi Kafka Disaster Recovery with Velero</title>
      <link>https://veerendra2.github.io/strimzi-kafka-disaster-recovery/</link>
      <pubDate>Sat, 24 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/strimzi-kafka-disaster-recovery/</guid>
      <description>Introduction Hello my dear fellow humans, hope you are having a great day. Today&amp;rsquo;s guide is on how to recover from a disaster for Strimzi Kafka with Velero. First of all, what is Strmzi Kafka?
https://strimzi.io
Strimzi provides a way to run an Apache Kafka cluster on Kubernetes in various deployment configurations.
Back in a while, I worked on Strimzi Kafka deployment on Openshift, very easy to set up and manage production-level Kafka cluster on Kubernetes, I have to give credit to the Strimzi project team, did a great job on documentation, support on Github discussions and active developments.</description>
    </item>
    
    <item>
      <title>Velero Deployment with Kustomize (Azure)</title>
      <link>https://veerendra2.github.io/velero-deployment/</link>
      <pubDate>Sat, 03 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/velero-deployment/</guid>
      <description>Introduction Hello guys, today I came up with an interesting write-up, that is how to set up backup and restore with Velero on Kubernetes. A year back I worked on Strimzi Kafka, a deployment solution for deploying production-level Kafka on Kubernetes. Strimzi Kafka uses persistance volume(PV) as a disk which is a managed disk from a cloud provider(e.g. Azure, AWS, etc), but I couldn&amp;rsquo;t find a proper backup solution in order to configure PV backup and restore.</description>
    </item>
    
    <item>
      <title>Moving to Hugo and other updates!</title>
      <link>https://veerendra2.github.io/moving-to-hugo/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/moving-to-hugo/</guid>
      <description>It has been 2 years since I wrote a new post. Due to busy work, moving to a new city, new jobs and getting married, I wasn’t able to keep up with writing blog posts. Finally, I’m back now, I have been thinking of changing blog themes for a long time. I spent some time exploring Jekyll themes and tried to modify them according to my requirements. As you can see here GitHub issue.</description>
    </item>
    
    <item>
      <title>CI/CD for GitHub Pages with GitHub Actions</title>
      <link>https://veerendra2.github.io/ci-cd-github-pages-with-github-actions/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/ci-cd-github-pages-with-github-actions/</guid>
      <description>Looks like my blog posts are like Sherlock TV Show episodes, posting once in a while&amp;hellip;anyways I&amp;rsquo;m back now. As you might know, GitHub recently launched GitHub Actions where people can automate workflows like build, test, and deploy code from GitHub.
I have started reading docs a little bit, I have to admit, setting up workflows on GitHub Actions is not that hard. I can directly start creating a workflow from available workflow templates in the &amp;ldquo;Actions&amp;rdquo; tab.</description>
    </item>
    
    <item>
      <title>SSL Configuration for Kubernetes External LoadBalancer - [AWS ELB]</title>
      <link>https://veerendra2.github.io/ssl-config-k8s-service-aws/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/ssl-config-k8s-service-aws/</guid>
      <description>As we all know, enabling HTTPS to endpoints/websites is essential now-a-days. When it comes to Kubernetes, when we expose a service as LoadBalancer, the cloud provider doesn&amp;rsquo;t provide an HTTPS mechanism for the endpoint by default.
If we look at the K8s setup that is deployed on AWS(For example kops), there is an actual ELB(Elastic Load Balancer) sits in front of K8s service and load balance the traffic. AWS&amp;rsquo;s ELB is not TLS enabled by default.</description>
    </item>
    
    <item>
      <title>Linux pseudo files &amp; cheat sheet</title>
      <link>https://veerendra2.github.io/linux-cheatseets/</link>
      <pubDate>Sat, 14 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/linux-cheatseets/</guid>
      <description>*A blog post that I’m actively collecting “Linux pseudo files info, cheat sheets and tips”
Tips &amp;amp; Tricks How to force a command to return exit code 0 even if the command exited non-zero?
How to install dependencies of .deb automatically which failed to install previously?
Example Solution:
$ dpkg -i r-base-core_3.3.3-1trusty0_amd64.deb || : \ &amp;amp;&amp;amp; apt-get --yes --force-yes -o Dpkg::Options::=&amp;#34;--force-confdef&amp;#34; -o Dpkg::Options::=&amp;#34;--force-confold&amp;#34; -f install -y \ How to traverse directories in shell script?</description>
    </item>
    
    <item>
      <title>Build and Install Wireshark</title>
      <link>https://veerendra2.github.io/wireshark-install/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/wireshark-install/</guid>
      <description>Wireshark is a great tool for analyzing traffic, whether it could be live traffic on the interface or the .cap file. The tool enables different types of filtering on packets like follow a stream, filter by protocol and IP, etc
In order to install the latest version of Wireshark on Linux, one should build and install it from the source. Sometimes, building from a source is difficult because we have to hunt down the dependencies.</description>
    </item>
    
    <item>
      <title>Open vSwitch installation on Redhat7 OS</title>
      <link>https://veerendra2.github.io/openvswitch-redhat/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/openvswitch-redhat/</guid>
      <description>Long back before I worked on Openshift which is really a great container platform tool from Redhat. But installation is not as simple as Kubernetes(relatively). One of the prerequisites for the cluster deployment is Open vSwitch.
Now let&amp;rsquo;s see how to install Open vSwitch v2.6.1 in RedHat7 step by step
Install dependencies
$ sudo yum install gcc make python-devel openssl-devel \ kernel-devel graphviz kernel-debug-devel \ autoconf automake rpm-build redhat-rpm-config \ libtool Grab OpenvSwitch source from http://www.</description>
    </item>
    
    <item>
      <title>Windows OS metrics collection with Telegraf</title>
      <link>https://veerendra2.github.io/windows-metrics-collection/</link>
      <pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/windows-metrics-collection/</guid>
      <description>Ok, getting metrics(CPU, Memory &amp;amp; Network) from Windows OS is completely different from Linux. In Linux, people can easily develop scripts to get system metrics by simply reading /proc pseudo files. In fact, there are so many open source tools to do this in Linux, like tcollector which is my favourite.
Now, Let&amp;rsquo;s look at this Telegraf tool and what it does. I found Telegraf tool is a really simple, elegant way to collect Windows OS metrics and lightweight too, unlike others which some are paid and crappy.</description>
    </item>
    
    <item>
      <title>KVM Hypervisor Cheat Sheets</title>
      <link>https://veerendra2.github.io/kvm-hyperviour-cheatsheets/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/kvm-hyperviour-cheatsheets/</guid>
      <description>1. Install Packages Check system is capable of running KVM by running kvm-ok
$ apt-get install qemu-kvm qemu-system libvirt-bin bridge-utils virt-manager -y Create KVM/Qemu Hard Disk File $ qemu-img create -f raw &amp;lt;name&amp;gt;.img &amp;lt;Size&amp;gt; ## Example $ qemu-img create -f raw ubuntu14-HD.img 10G Then copy the HD file to /var/lib/libvirt/images/ Launch VM with virt-install virt-install --name spinnaker \ --ram 11096 \ --vcpus=4 \ --os-type linux \ --os-variant=ubuntutrusty \ --accelerate \ --nographics -v \ --disk path=/var/lib/libvirt/images/ubuntu14-HD.</description>
    </item>
    
    <item>
      <title>Encrypt your DNS queries, stay anonymous</title>
      <link>https://veerendra2.github.io/dns-encrypt/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/dns-encrypt/</guid>
      <description>We think that connecting to a website over HTTPS is secure, which is true(not true sometimes!), but what about DNS queries that you(browser) send?
Sure if we use HTTPS, all your (POST or GET) data is encrypted end-to-end which prevents eavesdropping, MITM attack and have Confidentiality, but again what about DNS queries?
I got this question back a while ago, so after a quick Internet search, I found DNSCrypt protocol which is cool because I can encrypt DNS queries.</description>
    </item>
    
    <item>
      <title>Wifi Deauthentication Attack</title>
      <link>https://veerendra2.github.io/wifi-deathentication-attack/</link>
      <pubDate>Thu, 11 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/wifi-deathentication-attack/</guid>
      <description>A Wi-Fi deauthentication attack is a type of denial-of-service attack that targets communication between a user and a Wi-Fi wireless access point.
-Wikipedia
As you can see, this type of attack is pretty powerful and difficult to detect who is attacking. There are some tools(like “aircrack-ng”) for this attack(You can check the commands here).
So, basically the concept is the attacker broadcasts a wifi management “Deauthentication” frame to the victim&amp;rsquo;s devices/PC to tell them to deauthenticate.</description>
    </item>
    
    <item>
      <title>GNU screen commands(Cheat Sheet)</title>
      <link>https://veerendra2.github.io/gnu-screen-commands/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/gnu-screen-commands/</guid>
      <description>GNU Screen is a terminal multiplexer, a software application that can be used to multiplex several virtual consoles, allowing a user to access multiple separate login sessions inside a single terminal window, or detach and reattach sessions from a terminal. It is useful for dealing with multiple programs from a command line interface, and for separating programs from the session of the Unix shell that started the program, particularly so a remote process continues running even when the user is disconnected.</description>
    </item>
    
    <item>
      <title>Install jekyll in Ubuntu 14.04</title>
      <link>https://veerendra2.github.io/jeklly-website/</link>
      <pubDate>Sun, 07 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/jeklly-website/</guid>
      <description>👉 Update on 27-08-2022 Moving to Hugo and other updates! I was very excited to try Jekyll and Github Pages when I heard about it. When I try to install jekyll, I got below error
root@veeru:/home/veeru# gem install jekyll bundler Fetching: public_suffix-3.0.1.gem (100%) ERROR: Error installing jekyll: public_suffix requires Ruby version &amp;gt;= 2.1. Fetching: bundler-1.16.1.gem (100%) Successfully installed bundler-1.16.1 1 gem installed Installing ri documentation for bundler-1.16.1... Installing RDoc documentation for bundler-1.</description>
    </item>
    
    <item>
      <title>MAC Address Scrambling in Linux</title>
      <link>https://veerendra2.github.io/mac-scrambling/</link>
      <pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://veerendra2.github.io/mac-scrambling/</guid>
      <description>“MAC Address Scrambling“- By the name itself we can understand, instead of using a burned-in address, the machine uses a random MAC address. The machine/device changes MAC addresses regularly to improve security. MAC address is a 48-bit hexadecimal digit which is burned in every electronic device that has the capability of “connectivity” such as mobile devices, smart TV, PC, etc. “Apple” added this feature to iPhones from iOS8 to protect users’ privacy.</description>
    </item>
    
  </channel>
</rss>
